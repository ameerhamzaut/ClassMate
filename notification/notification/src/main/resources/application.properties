server.port=8084
# Database Settings
spring.datasource.url=jdbc:postgresql://localhost:5432/notificationservice_db

spring.datasource.username= postgres
spring.datasource.password= postgres

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
# Hibernate ddl auto (create, create-drop, validate, update)
# Allows for auto creation of tables
spring.jpa.hibernate.ddl-auto = update

# when using @Slf4j, To show the logs in the terminal
logging.level.com=INFO

############ Eureka Discovery Client configurations for the notification-service

spring.application.name=notification-service
eureka.client.serviceUrl.defaultZone  = http://localhost:8761/eureka
eureka.instance.preferIpAddress = true


spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: enrollmentNotifyGroup
spring.kafka.consumer.auto-offset-reset: earliest

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# "order" is a random token word that need to be shared between the two bindings
spring.kafka.consumer.properties.spring.json.type.mapping=enrollmentdto:esi.classmate.notification.dto.EnrollNotificationDto

spring.kafka.consumer.enable-auto-commit=false


spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=classmateut
spring.mail.password=etrakkqlkbkgehdu
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true